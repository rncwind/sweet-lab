syntax = "proto3";
package routeguide;

service RouteGuide {
    // A simmple RPC. Given a Point, returns a Feature for that location.
    rpc GetFeature (Point) returns (Feature) {};
    // Server->Client stream that gives features within a Rectangle.
    rpc ListFeatures (Rectangle) returns (stream Feature) {};
    // Client->Server stream that given a set of points, returns a summary of the route.
    rpc RecordRoute (stream Point) returns (RouteSummary) {};
    // Client<->Server stream that accepts a stream of routenotes sent while a route is being traversed,
    // while recieiving other routeNotes.
    rpc RouteChat (stream RouteNote) returns (stream RouteNote) {};
}

message Point {
    int32 latitude = 1;
    int32 longitude = 2;
}

message Rectangle {
    Point lo = 1;
    Point hi = 2;
}

// A feature names something at a given point.
//
// If a feature could not be named, the name is empty.
message Feature {
  // The name of the feature.
  string name = 1;

  // The point where the feature is detected.
  Point location = 2;
}

// A RouteNote is a message sent while at a given point.
message RouteNote {
  // The location from which the message is sent.
  Point location = 1;

  // The message to be sent.
  string message = 2;
}

// A RouteSummary is received in response to a RecordRoute rpc.
//
// It contains the number of individual points received, the number of
// detected features, and the total distance covered as the cumulative sum of
// the distance between each point.
message RouteSummary {
  // The number of points received.
  int32 point_count = 1;

  // The number of known features passed while traversing the route.
  int32 feature_count = 2;

  // The distance covered in metres.
  int32 distance = 3;

  // The duration of the traversal in seconds.
  int32 elapsed_time = 4;
}